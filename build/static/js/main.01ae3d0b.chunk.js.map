{"version":3,"sources":["Components/Login.js","Components/ToDo.js","App.js","reportWebVitals.js","index.js"],"names":["Login","useState","username","password","input","setInput","handleChange2","event","target","name","value","prevInput","className","onChange","autoComplete","placeholder","type","style","padding","onClick","preventDefault","login","axios","post","then","response","console","log","data","token","verify","localStorage","setItem","alert","fetch","method","headers","getItem","res","json","auth","catch","err","parseInt","address","window","location","href","replace","list","Todo","props","state","list1","handleSubmit","bind","removeButton","updateButton","result","setState","check","set","msg","length","i","push","id","populate","document","getElementById","innerHTML","header","createElement","cssText","appendChild","tbl","tblHead","backgroundColor","traceHead","colHeaders","k","tblHdData","tblBody","traceBody","identity","id0","task0","task","assign0","assign","cash0","cash","email0","email","progress0","progress","this","test","Date","now","count","Array","from","String","Number","splice","singleNumber","join","id_","task_","assign_","cash_","email_","progress_","newItem","reload","rem","prompt","rem1","includes","delTask","remove","up","up1","filter","element","id_u","updateItem","paddingLeft","paddingRight","paddingTop","color","to","Component","App","path","exact","ToDo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.01ae3d0b.chunk.js","sourcesContent":["////First Import React and the necessary libraries including axios.\r\nimport React, {useState} from 'react'\r\nimport axios from 'axios'\r\n\r\n/*Create a function handle user authentication and login */\r\nfunction Login () {\r\n      \r\n    const [input, setInput] = useState ({\r\n        username: '',\r\n        password: '',\r\n    })\r\n\r\n/*This button updates the user name and password (basically assigns what the user entered for \r\n  username and password) */\r\n    function handleChange2(event) {\r\n        const {name, value} = event.target;\r\n\r\n        setInput(prevInput => {\r\n            return {\r\n                ...prevInput,\r\n              [name]: value\r\n           }\r\n        })\r\n    }\r\n\r\n  /*This button basically sends what the user entered for their name and password to be authenticated\r\n  In particular, the post methid returns a token to be verified */\r\n    function handleClick(event) {\r\n        event.preventDefault();\r\n        var login = {\r\n             username: input.username,\r\n             password: input.password,\r\n        };\r\n\r\n       axios.post('/login', login)\r\n       .then((response) => {\r\n           console.log(response.data.token)\r\n           console.log(response.data.verify)\r\n           localStorage.setItem(\"token\", \"Bearer \"+ response.data.token)\r\n           localStorage.setItem(\"verify\", response.data.verify)\r\n       })\r\n        console.log(input.username+' '+input.password);\r\n        alert('Details Submitted')\r\n\r\n\r\n    };\r\n\r\n    /*The below button function basically authenticates the user and if succeffully authenticated, the\r\n    user is taken to the todo list page. */\r\n    function handleList(event) {\r\n        event.preventDefault();\r\n\r\n        fetch('/resource', {\r\n            method: 'GET',\r\n            headers: {\r\n              'Authorization': localStorage.getItem(\"token\")\r\n            }\r\n          })\r\n          .then(res => res.json())\r\n          .then(response => { \r\n            console.log(response) \r\n          localStorage.setItem(\"verify\", response.auth)\r\n          })\r\n          .catch(err => { console.log(err) })\r\n\r\n\r\n          if(parseInt(localStorage.getItem(\"verify\")) === 1) {\r\n            alert('User Authenticated');\r\n            let url_ = window.location.href;\r\n            let address = url_+'todo';\r\n            window.location.replace(address);                    \r\n          } else {\r\n            alert('Please check login details');\r\n          }\r\n    }\r\n\r\n    /*We display and render our login page below */\r\n    return <div className = 'container'>\r\n        <br />\r\n        <h1 className=\"text-info\">Login Details</h1>\r\n        <br />\r\n        <form>\r\n\r\n            <div className='form-group'>\r\n            <input onChange={handleChange2} name ='username' value={input.username} autoComplete='off' className='form-control' placeholder='username'></input>\r\n            </div>\r\n\r\n            <br />\r\n\r\n            <div className='form-group'>\r\n            <input type=\"password\" onChange={handleChange2} name ='password' value={input.password} autoComplete='off' className='form-control' placeholder='password'></input>\r\n            </div>\r\n\r\n            <br />\r\n\r\n            <div className='form-inline'>\r\n              <div style={{padding: \"10px\"}}>\r\n              <button onClick={handleClick} className='btn btn-lg btn-info'>Submit</button>\r\n              </div>\r\n              <div style={{padding: \"10px\"}}>\r\n              <button onClick={handleList} className='btn btn-lg btn-secondary'>Authenticate</button>\r\n              </div>\r\n            </div>\r\n\r\n         </form>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Login;","/*First import the required libraries, including React and axios */\r\nimport React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport { Container, Row, Col, Table } from 'react-bootstrap';\r\n\r\n/*Define an empty list... we will use this to store the tasks from the mongodb list collection */\r\nlet list = [];\r\n\r\n/*Create the Todo component. This will allow the user to view th list as well as manage it */\r\nclass Todo extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        list1:[],\r\n        };\r\n\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n      this.removeButton = this.removeButton.bind(this);\r\n      this.updateButton = this.updateButton.bind(this)\r\n    };\r\n\r\n\r\n/*After the user is authenticated, we fetch the existing list from the mongodb database and display it\r\nin the body of our webpage */\r\n    componentDidMount() {\r\n     \r\n        fetch(`/task`)\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n        this.setState({\r\n          list1: result});\r\n        })\r\n        .then((check) => console.log(this.state.list1))\r\n      \r\n        .then((set) => {\r\n          list = [];\r\n\r\n          if(this.state.list1.msg || this.state.list1.err) {\r\n          list = []\r\n          } else {\r\n            if(this.state.list1.length > 0) {\r\n              for(let i = 0; i<this.state.list1.length; i++) {\r\n                list.push(this.state.list1[i].id);\r\n              }\r\n            }\r\n          }\r\n        })\r\n\r\n            .then((populate) => {\r\n\r\n              if(this.state.list1.msg === 'Incorrect Login') {\r\n\r\n                document.getElementById('myList').innerHTML=\"\";\r\n\r\n                let header = document.createElement(\"h2\");\r\n                header.style.cssText = \"color: red\";\r\n                header.innerHTML = \"Incorrect Login - Please try again\";\r\n                document.getElementById('myList').appendChild(header)\r\n\r\n              } else { \r\n\r\n              document.getElementById('myList').innerHTML=\"\";\r\n   \r\n              //Below we create the table that will display our outstanding tasks\r\n              if (this.state.list1.length > 0) {\r\n\r\n                let tbl = document.createElement(\"Table\");\r\n                tbl.id = \"Table\";\r\n                tbl.className = 'table table-hover'\r\n                let tblHead = document.createElement(\"thead\");\r\n                tblHead.style.cssText = \"color: white\";\r\n                tblHead.style.backgroundColor =  \"midnightblue\";\r\n                tblHead.id = \"tableHead\";\r\n                let traceHead =  document.createElement(\"tr\");\r\n                traceHead.id = \"traceHead\";\r\n                document.getElementById('myList').appendChild(tbl);\r\n                document.getElementById('Table').appendChild(tblHead);\r\n                document.getElementById('tableHead').appendChild(traceHead);\r\n\r\n\r\n                const colHeaders = ['Id', 'Task', 'Assigned', 'Cash', 'email', 'Progress'];\r\n\r\n                for (let k = 0; k<colHeaders.length; k++) {\r\n                  let tblHdData = document.createElement(\"th\");\r\n                  tblHdData.innerHTML = colHeaders[k];\r\n                  document.getElementById('traceHead').appendChild(tblHdData);\r\n                }\r\n\r\n                let tblBody = document.createElement(\"tbody\");\r\n                tblBody.id = \"tableBody\";\r\n\r\n                document.getElementById('Table').appendChild(tblBody);\r\n\r\n                for (let i = 0; i < this.state.list1.length; i++) {\r\n                  let traceBody = document.createElement(\"tr\");\r\n                  let identity = 'id'+i;\r\n                  traceBody.id = identity;\r\n                  document.getElementById('tableBody').appendChild(traceBody)   \r\n                  \r\n                  let id0 = document.createElement('td');\r\n                  id0.innerHTML = this.state.list1[i].id;\r\n                  document.getElementById(identity).appendChild(id0);\r\n\r\n                  let task0 = document.createElement('td');\r\n                  task0.innerHTML = this.state.list1[i].task;\r\n                  document.getElementById(identity).appendChild(task0);\r\n\r\n                  let assign0 = document.createElement('td');\r\n                  assign0.innerHTML = this.state.list1[i].assign;\r\n                  document.getElementById(identity).appendChild(assign0);\r\n\r\n                  let cash0 = document.createElement('td');\r\n                  cash0.innerHTML = this.state.list1[i].cash;\r\n                  document.getElementById(identity).appendChild(cash0);\r\n\r\n                  let email0 = document.createElement('td');\r\n                  email0.innerHTML = this.state.list1[i].email;\r\n                  document.getElementById(identity).appendChild(email0);\r\n\r\n                  let progress0 = document.createElement('td');\r\n                  progress0.innerHTML = this.state.list1[i].progress;\r\n                  document.getElementById(identity).appendChild(progress0);\r\n\r\n                }\r\n\r\n              } else {\r\n                alert('No tasks currently!')\r\n              }\r\n            }\r\n          })\r\n        };\r\n        \r\n\r\n\r\n /*Here the we create a function that updates the mongodb database, in this case the user can add a task to the\r\n list */ \r\n   handleSubmit(event) {\r\n\r\n      if(this.state.list1.msg === 'Incorrect Login') {\r\n          alert('you are not logged on!')\r\n      } else {\r\n\r\n        const test = Date.now();\r\n    \r\n        const intArr = Array.from(String(test), Number);\r\n        let count = intArr.splice(4,4);\r\n        const singleNumber = Number(count.join(''));\r\n\r\n        let id_ = parseInt(singleNumber);        \r\n        let task_ = document.getElementById(\"task\").value;\r\n        let assign_ = document.getElementById(\"assign\").value;\r\n        let cash_ = document.getElementById(\"cash\").value;\r\n        let email_ = document.getElementById(\"email\").value;\r\n        let progress_ = document.getElementById(\"progress\").value;\r\n\r\n        event.preventDefault();\r\n        \r\n        var newItem = {\r\n          id: id_,\r\n          task: task_,\r\n          assign: assign_,\r\n          cash: cash_,\r\n          email: email_,\r\n          progress: progress_\r\n        };\r\n\r\n        axios.post('http://localhost:8000/create', newItem)\r\n\r\n        if(task_ === '' || assign_ === '' || cash_ === '' || email_ === '' || progress_ === '' ) {\r\n          alert('Please Check Inputs')\r\n        } else {\r\n          alert('task added')\r\n        }\r\n\r\n        window.location.reload();\r\n\r\n        };\r\n\r\n      };\r\n    \r\n  /*This button allows the user to remove a task from the todo list */\r\n   removeButton() {\r\n    if(this.state.list1.msg === 'Incorrect Login') {\r\n      alert('you are not logged on!')\r\n      } else {\r\n\r\n      let rem = prompt(\"Please select the id of the item you want removed\",);\r\n      let rem1 = parseInt(rem)\r\n\r\n      if(list.includes(rem1)) {\r\n        \r\n      var delTask = {\r\n        remove: rem1\r\n      }\r\n\r\n      axios.post('http://localhost:8000/delete1', delTask);\r\n      alert('task deleted')\r\n      window.location.reload();\r\n\r\n    } else {\r\n      alert('Please Check: Id not in list')\r\n  }\r\n\r\n  }\r\n};\r\n\r\n  /*This button allows the user to update a task from the todo list */\r\n    updateButton() {\r\n      if(this.state.list1.msg === 'Incorrect Login') {\r\n        alert('you are not logged on!')\r\n        } else {\r\n\r\n      let up = prompt(\"Please select the id of the item you want updated\",);\r\n      let up1 = parseInt(up)\r\n\r\n      if(list.includes(up1)) {\r\n\r\n        var filter = this.state.list1.filter(element => element.id == up1);\r\n     \r\n        let id_u = up1;   \r\n        let task_u = filter[0].task;\r\n        let assign_u = filter[0].assign;\r\n        let cash_u = filter[0].cash;\r\n        let email_u = filter[0].email;\r\n        let progress_u = filter[0].progress;\r\n\r\n        if(document.getElementById(\"task\").value === '') {\r\n           task_u = filter[0].task;\r\n        } else {\r\n           task_u = document.getElementById(\"task\").value;\r\n        }\r\n\r\n        if(document.getElementById(\"assign\").value === '') {\r\n           assign_u = filter[0].assign;\r\n        } else {\r\n           assign_u = document.getElementById(\"assign\").value;\r\n        }\r\n\r\n        if(document.getElementById(\"cash\").value === '') {\r\n           cash_u = filter[0].cash;\r\n        } else {\r\n           cash_u = document.getElementById(\"cash\").value;\r\n        }\r\n\r\n        if(document.getElementById(\"email\").value === '') {\r\n           email_u = filter[0].email;\r\n        } else {\r\n           email_u = document.getElementById(\"email\").value;\r\n        }\r\n\r\n        if(document.getElementById(\"progress\").value === '') {\r\n           progress_u = filter[0].email;\r\n        } else {\r\n           progress_u = document.getElementById(\"progress\").value;\r\n        }\r\n        \r\n        var updateItem = {\r\n          id: id_u,\r\n          task: task_u,\r\n          assign: assign_u,\r\n          cash: cash_u,\r\n          email: email_u,\r\n          progress: progress_u\r\n        };\r\n\r\n        console.log(updateItem);\r\n\r\n        axios.post('http://localhost:8000/updatemany1', updateItem)\r\n\r\n      } else {\r\n        alert('Please Check: Id not in list');\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n/*We display and render our component below */\r\nrender() {\r\n\r\n    return (\r\n        <div>\r\n          <div style={{paddingLeft:'20px', paddingRight: '20px', paddingTop: '20px'}}>\r\n        <h1 style={{color: \"white\", backgroundColor: 'royalblue'}}><b>Task Manager</b></h1>\r\n        </div>\r\n\r\n        <form>\r\n            <div style={{paddingLeft: \"100px\"}} className='form-inline'>\r\n\r\n            <div style={{padding: \"10px\"}} className='form-group'>\r\n            <input type=\"text\" id=\"task\" name ='task' value={this.state.task} autoComplete='off' className='form-control' placeholder='task'></input>\r\n            </div>\r\n\r\n            <br />\r\n\r\n            <div style={{padding: \"10px\"}} className='form-group'>\r\n            <input type=\"text\" id=\"assign\" name ='assign' value={this.state.assign} autoComplete='off' className='form-control' placeholder='assign'></input>\r\n            </div>\r\n\r\n            \r\n            <br />\r\n\r\n            <div style={{padding: \"10px\"}} className='form-group'>\r\n            <input type=\"text\" id=\"cash\" name ='cash' value={this.state.cash} autoComplete='off' className='form-control' placeholder='cash'></input>\r\n            </div>\r\n\r\n            \r\n            <br />\r\n\r\n            <div style={{padding: \"10px\"}} className='form-group'>\r\n            <input type=\"text\" id=\"email\" name ='email' value={this.state.email} autoComplete='off' className='form-control' placeholder='email'></input>\r\n            </div>\r\n\r\n            \r\n            <br />\r\n\r\n            <div style={{padding: \"10px\"}} className='form-group'>\r\n            <input type=\"text\" id=\"progress\" name ='progress' value={this.state.progress} autoComplete='off' className='form-control' placeholder='progress'></input>\r\n            </div>\r\n\r\n\r\n            </div>\r\n\r\n            <br />\r\n          \r\n\r\n            <div style={{paddingLeft: \"400px\"}} className='form-inline'>\r\n              \r\n            <div style={{padding: \"10px\"}} id=\"create\">\r\n                <button className='btn btn-lg btn-info' onClick={this.handleSubmit}>Create</button>\r\n          \r\n            </div>\r\n\r\n                <div style={{padding: \"10px\"}} id=\"remove\">\r\n              <button id=\"removeButton\" onClick={this.removeButton} className='btn btn-lg btn-success'>Remove</button>\r\n            </div>\r\n\r\n            <div style={{padding: \"10px\"}} id=\"update\">\r\n              <button id=\"updateButton\" onClick={this.updateButton} className='btn btn-lg btn-warning'>Update</button>\r\n            </div>\r\n\r\n      \r\n            <div style={{padding: \"10px\"}} id=\"login\">\r\n              <button style={{color: \"white\"}} id=\"loginButton\" className='btn btn-lg btn-danger'><Link style={{color: \"white\"}} className=\"link\" to='/'>Login page</Link></button>\r\n            </div>\r\n\r\n            </div>\r\n\r\n\r\n        </form>\r\n             <br />\r\n            <div style={{paddingLeft:'20px', paddingRight: '20px', paddingTop: '15px'}}>\r\n            <h2 style={{color: 'white', backgroundColor: 'darkred'}}><b>Activities Outstanding</b></h2>    \r\n            </div>      \r\n            <div style={{paddingLeft: \"20px\", paddingRight: '20px'}} id=\"myList\"></div>\r\n\r\n        </div>\r\n        )}\r\n    };\r\n\r\nexport default Todo;\r\n","/*Import required libraries and css styling*/\nimport React, { Component } from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport './App.css';\nimport './css/myStyle.css';\n\n/*Import user defined modules */\nimport Login from './Components/Login.js';\nimport ToDo from './Components/ToDo.js';\n\n/*Import bootstrap and link to bootstrap */\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n<link\n  rel=\"stylesheet\"\n  href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n  integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\n  crossorigin=\"anonymous\"\n/>\n\n/*Create or define our app below. Here we used the router feature. The user defaults to a login page\nand if the user enters the correct details, they are authenticated and taken to the /todo page which\nwhich displays the list collection from the mongodb database. The user can then interact with the database\nfrom here*/\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Route path='/' exact>\n            <Login />\n          </Route>\n\n          <Route path='/todo' exact>\n            <ToDo />\n          </Route>\n\n        </Router>\n      </div>\n    );\n  };\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n<link\n  rel=\"stylesheet\"\n  href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n  integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\n  crossorigin=\"anonymous\"\n/>\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}